
logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.orm.jdbc.bind: trace

spring:
  datasource:
    url: ${AWS_RDS_URL_DEVELOP}
    driver-class-name: ${AWS_RDS_DRIVER}
    username: ${AWS_RDS_USERNAME}
    password: ${AWS_RDS_PASSWORD}

  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    open-in-view: false
    # show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100
  data:
    redis:
#      host: localhost
#      port: 6379
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${OAUTH2_GOOGLE_CLIENT_ID}
            client-secret: ${OAUTH2_GOOGLE_CLIENT_SECRET}
  main:
    allow-bean-definition-overriding: true

jwt:
  issuer: ${JWT_ISSUER}
  secret_key: ${JWT_SECRET}
  access_expiration: ${JWT_ACCESS_EXPIRATION}
  refresh_expiration: ${JWT_REFRESH_EXPIRATION}
prefix:
  refresh_token_prefix: ${REDIS_REFRESH_PREFIX}
  alarm_prefix: ${REDIS_ALARM_PREFIX}

openweathermap:
  key: ${OPENWEATERMAP_KEY}
fcm:
  key: ${FCM_KEY}
domain:
  local: ${LOCAL_DOMAIN}
  server: ${SERVER_DOMAIN}
#server:
#  ssl:
#    key-store: keystore.p12
#    key-store-type: PKCS12
#    key-store-password: dlxogns831~