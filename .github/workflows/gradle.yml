# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]

env:
  S3_BUCKET_NAME: coordikittycd
  RESOURCE_PATH: src/main/resources/application.yml
  CODE_DEPLOY_APPLICATION_NAME: coordikitty-backend
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: coordikitty-backend-group

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'

     # - name: Set yaml file
      #  uses: microsoft/variable-substitution@v1
      #  with:
     #     files: ${{ env.RESOURCE_PATH }}
      #  env:
       #   override.value: ${{ secrets.DI_FROM_SECRET }}

      - name: checkout branch
        run: git checkout develop

      - name: git pull
        run: git pull

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

            # [5]
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://${{ env.S3_BUCKET_NAME }}/$GITHUB_SHA.zip

        # [6]
      - name: Code Deploy
        run: |
          aws deploy create-deployment \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=${{ env.S3_BUCKET_NAME }},bundleType=zip,key=$GITHUB_SHA.zip

